001: Успешная регистрация.
431: Никнейм не указан.
433: Никнейм уже используется.
461: Недостаточно параметров.
451: Клиент не аутентифицирован.
464: Неправильный пароль.
421: Неизвестная команда.

------
// Никнеймы должны быть уникальны на сервере.
// Имена пользователя (USER) могут совпадать у разных клиентов.

------
У меня команды NICK и USER реализованы через систему классов.
Использую объектно-ориентированный подход, из того что мы делали в модулях ромашки cpp.

Есть базовый класс Command, который задаёт интерфейс execute(), 
а NickCommand и UserCommand переопределяют его, реализуя обработку команд. 
Они получают доступ к серверу через _server, 
проверяют входные данные и состояние клиента. 

Ошибки и успешные ответы отправляются клиенту через send, 
чтобы соответствовать протоколу IRC. 
NICK можно менять, но USER устанавливается один раз.

------
Схема работы сервера

Клиент подключается, сервер создаёт объект Client.
Клиент вводит команду (PASS, NICK, USER).
Сервер получает команду (recv()) и вызывает handleCommand().
Команда проверяется в commands и выполняется (commands["NICK"]->execute(client, args);).
Команда изменяет данные клиента (client->setNickname(args[0]);).
Ответ сервер отправляет через send().