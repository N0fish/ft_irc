001: Успешная регистрация.
431: Никнейм не указан.
433: Никнейм уже используется.
461: Недостаточно параметров.
451: Клиент не аутентифицирован.
464: Неправильный пароль.
421: Неизвестная команда.

------
// Никнеймы должны быть уникальны на сервере.
// Имена пользователя (USER) могут совпадать у разных клиентов.

------
У меня команды NICK и USER реализованы через систему классов.
Использую объектно-ориентированный подход, из того что мы делали в модулях ромашки cpp.

Есть базовый класс Command, который задаёт интерфейс execute(), 
а NickCommand и UserCommand переопределяют его, реализуя обработку команд. 
Они получают доступ к серверу через _server, 
проверяют входные данные и состояние клиента. 

Ошибки и успешные ответы отправляются клиенту через send, 
чтобы соответствовать протоколу IRC. 
NICK можно менять, но USER устанавливается один раз.

------
Схема работы сервера

Клиент подключается, сервер создаёт объект Client.
Клиент вводит команду (PASS, NICK, USER).
Сервер получает команду (recv()) и вызывает handleCommand().
Команда проверяется в commands и выполняется (commands["NICK"]->execute(client, args);).
Команда изменяет данные клиента (client->setNickname(args[0]);).
Ответ сервер отправляет через send().

------
1. регистрация пользователя (PASS / NICK / USER)
Без выполнения всех трёх команд клиент не должен иметь доступа к другим командам.
Сервер должен отправлять ошибку 451 (You have not registered), 
если клиент пытается что-то делать до полной регистрации.

2. JOIN / PART
Клиент должен получать подтверждение, что он вошел в канал.
Если канал уже существует, клиент должен просто присоединиться.
Если канал пустеет, он должен удаляться.

3. PRIVMSG
Сообщения в канал должны рассылаться всем пользователям в нём.
Личные сообщения должны доставляться только адресату.

4. PONG
Сервер должен корректно отвечать на PING от клиента.

5. KICK
Команда KICK удаляет указанного пользователя с канала. 
Её может использовать только оператор канала.

KICK <#channel> <nickname> [<reason>]
<channel> — канал, откуда нужно удалить пользователя.
<user> — никнейм удаляемого пользователя.
<comment> (опционально) — причина кика.

6. MODE
Команда MODE позволяет изменять или запрашивать параметры канала.
Её могут использовать только операторы канала для изменения настроек,
а обычные пользователи могут использовать её для запроса текущих параметров.

MODE <#channel> [<flags> [<parameters>]]
<channel> — Название канала (должно начинаться с #).
<flags> — Режимы канала, которые нужно изменить (например, +i для режима "только по приглашению").
<parameters> (опционально) — дополнительные параметры (например, пароль или лимит пользователей).
Флаг	Описание
+i	Включает режим "только по приглашению" (Invite-only)
-i	Отключает режим "только по приглашению"
+t	Только оператор канала может менять тему
-t	Любой пользователь может менять тему
+k <password>	Устанавливает пароль на вход
-k	Убирает пароль
+o <nickname>	Назначает оператора канала
-o <nickname>	Снимает права оператора
+l <limit>	Устанавливает лимит пользователей
-l	Убирает лимит

Команда MODE позволяет:

Запрашивать текущие режимы канала.
Назначать и снимать операторов.
Включать/выключать режим "по приглашению".
Ограничивать изменение темы.
Устанавливать/удалять пароль.
Устанавливать/снимать лимит пользователей.

7. INVITE
INVITE <nickname> <channel>
Команда используется операторами канала для приглашения пользователей в приватные 
или invite-only каналы.

8. TOPIC
TOPIC <#channel> [<topic>]
Если TOPIC #channel (без <topic>), сервер отправляет текущую тему.
Если TOPIC #channel <topic>, сервер обновляет тему канала.
Только операторы могут менять тему, если +t (topic-restricted).
Если +t не установлен, любой участник может менять тему.